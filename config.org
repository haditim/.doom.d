* How to use
This file uses [[https://github.com/doomemacs/doomemacs/tree/master/modules/config/literate][doom literate]] module to set configurations as an ~org-mode~ file. To use:
- Make sure =:config -> literate= is enabled in ~init.el~ (if you use my whole repo, this is already included)
- Content of this file will be tangled to ~config.el~ upon save
- Run =doom/reload= to see the changes

  Following lines are for the tangled ~config.el~:
#+begin_src emacs-lisp
;; DO NOT CHANGE
;; This file is automatically generated
;; To modify configs, take a look at `config.org`
#+end_src

* Keybinds
** jump to paranthesis with tab
#+begin_src emacs-lisp
(map! :n [tab] 'evil-jump-item)
#+end_src

** expand region
#+begin_src emacs-lisp
(map! :leader
      (:desc "Expand region"  "v" #'er/expand-region))
#+end_src

** rename buffer
#+begin_src emacs-lisp
(map! :leader
      (:prefix "b"
       :desc "Rename the buffer" "R" #'rename-buffer))
#+end_src

** debugger
#+begin_src emacs-lisp
(map! :leader
      (:prefix "o"
       :desc "Debugger start last" "l" #'+debugger/start-last
       :desc "Debugger quit" "q" #'+debugger/quit))
#+end_src

** drag text up-down
#+begin_src emacs-lisp
(map!
 :n "M-p" 'drag-stuff-up
 :n "M-n" 'drag-stuff-down)
#+end_src

** stop compilation
#+begin_src emacs-lisp
(map! :leader
      (:prefix "c"
       :desc "Kill compilation" "K" #'kill-compilation))
#+end_src

** subed-mode restore keybinds
#+begin_src emacs-lisp
(map! :map (subed-mode subed-srt-mode-map)
  :n "M-p" #'subed-backward-subtitle-text
  :n "M-n" #'subed-forward-subtitle-text
  :leader                           ; Use leader key from now on
  :desc "MPV play/pause" "<RET>" #'subed-mpv-toggle-pause)
#+end_src

** find other file (switch between .c and .h)
#+begin_src emacs-lisp
(map! :leader
      (:prefix "f"
       :desc "Find other file (.c, .h)" "o" #'ff-find-other-file))
#+end_src

* Look and feel
** Start fullscreen
#+begin_src emacs-lisp
(toggle-frame-fullscreen)
#+end_src

** Don't ask to quit
#+begin_src emacs-lisp
(setq confirm-kill-emacs nil)
#+end_src

** Modeline adjustments
#+begin_src emacs-lisp
(setq doom-modeline-major-mode-icon t)
#+end_src

** doom-molokai for the theme
#+begin_src emacs-lisp
(setq
 doom-theme 'doom-molokai
 display-line-numbers-type 'relative)
#+end_src

** Treemacs
*** Fix icons problem
#+begin_src emacs-lisp
(doom-themes-treemacs-config)
(after! treemacs
  (treemacs-load-theme "doom-colors")
#+end_src

*** Always follow open files
#+begin_src emacs-lisp
  (setq treemacs-follow-mode t))
#+end_src

** Font
#+begin_src emacs-lisp
(setq my-font
      (cl-find-if #'doom-font-exists-p
                    '("DejaVu Sans Code"
                      "Dejavu Sans Mono")))
(setq doom-font (font-spec :family my-font :size 15)
      doom-big-font (font-spec :family my-font :size 21))
#+end_src

* Programming languages

** Global settings
*** lsp always show breadcrumb
#+begin_src emacs-lisp
(setq lsp-headerline-breadcrumb-enable t)
#+end_src

*** enable eldoc-box by default when eglot loads
#+begin_src emacs-lisp
(add-hook 'eglot--managed-mode-hook #'eldoc-box-hover-mode t)

#+end_src

** C
*** Linux kernel indentation
#+begin_src emacs-lisp
(setq c-default-style "linux"
      c-basic-offset 4)
#+end_src

*** Automatic indentation
#+begin_src emacs-lisp
(add-hook 'c-mode-common-hook #'(lambda () (c-toggle-auto-state 1)))
#+end_src

* Human languages
** Enable Persian/Arabic and other RTL languages in org-mode
#+begin_src emacs-lisp
(add-hook 'org-mode-hook #'+bidi-mode)
#+end_src

** A tolerable font for Persian/Arabic
#+begin_src emacs-lisp
(add-hook '+bidi-mode-hook
          (lambda () (set-fontset-font t 'arabic (font-spec :family "Droid Naskh Shift Alt"))))
#+end_src

* Compilation
** Always scroll
#+begin_src emacs-lisp
(after! compile
        (setq compilation-scroll-output t))
#+end_src


* Org-mode
#+begin_src emacs-lisp
(setq org-directory "~/Documents/ORG/")
(add-hook! 'org-mode-hook 'org-download-enable)
#+end_src

** org-modern-mode global
#+begin_src emacs-lisp
(global-org-modern-mode)
#+end_src

* Dired
** Hide files toggle on M-h
#+begin_src emacs-lisp
(setq my-dired-ls-switches "-alh --ignore=.* --ignore=\\#* --ignore=*~")

(setq my-dired-switch 1)
#+end_src

** Don't ask questions about size
#+begin_src emacs-lisp
(setq large-file-warning-threshold nil)

(add-hook 'dired-mode-hook
          (lambda ()
            "Set the right mode for new dired buffers."
            (when (= my-dired-switch 1)
              (dired-sort-other my-dired-ls-switches))))

(add-hook 'dired-mode-hook
          (lambda ()
            (dired-hide-details-mode)  ; enable with "("
            (define-key dired-mode-map (kbd "M-h")
              (lambda ()
                "Toggle between hide and show."
                (interactive)
                (setq my-dired-switch (- my-dired-switch))
                (if (= my-dired-switch 1)
                    (dired-sort-other my-dired-ls-switches)
                  (dired-sort-other "-alh"))))))
#+end_src

* Projects
** Set projects path
#+begin_src emacs-lisp
(setq projectile-project-search-path '("~/Projects/Code"))
#+end_src

* Misc (not very important and can be removed)
** add startpage and quant to search engines
#+begin_src emacs-lisp
(add-to-list '+lookup-provider-url-alist '("Startpage" "https://www.startpage.com/do/dsearch?query=%s"))
(add-to-list '+lookup-provider-url-alist '("Qwant" "https://qwant.com/?q=%s"))
#+end_src


** Ansi colors in buffer
#+begin_src emacs-lisp
(defun display-ansi-colors ()
  (interactive)
  (ansi-color-apply-on-region (point-min) (point-max)))
#+end_src

** undo-tree everywhere
#+begin_src emacs-lisp
(setq global-undo-tree-mode t)
#+end_src

* Not used any more
** Keycast
*** keycast with doom modeline
#+begin_src emacs-lisp :tangle no
(after! keycast
  (define-minor-mode keycast-mode
    "Show current command and its key binding in the mode line."
    :global t
    (if keycast-mode
        (progn
                (add-hook 'pre-command-hook 'keycast--update t)
                (add-to-list 'global-mode-string '("" mode-line-keycast)))
      (progn
         (remove-hook 'pre-command-hook 'keycast-mode-line-update)
         (setq global-mode-string (delete '("" mode-line-keycast " ") global-mode-string)))))
  (setq keycast-substitute-alist '((evil-next-line nil nil)
                                   (evil-previous-line nil nil)
                                   (evil-forward-char nil nil)
                                   (evil-backward-char nil nil)
                                   (ivy-done nil nil)
                                   (self-insert-command nil nil))))
(add-to-list 'global-mode-string '("" mode-line-keycast))
#+end_src

*** toggle keycast-mode
#+begin_src emacs-lisp :tangle no
 (map! :leader
       (:prefix "t"
        :desc "keycast" "k" #'keycast-mode))
#+end_src

** EAF (Still too slow for my taste)
#+begin_src emacs-lisp :tangle no

 (add-load-path! "~/.doomemacs.d/site-lisp/emacs-application-framework/")
 (use-package! eaf
   :config
         (require 'eaf)
         (require 'eaf-browser)
         (require 'eaf-pdf-viewer)
         (require 'eaf-org-previewer)
         (require 'eaf-terminal)
         (require 'eaf-video-player)
         (require 'eaf-markdown-previewer)
         (require 'eaf-image-viewer)
         (setq browse-url-browser-function 'eaf-open-browser)
         (setq eaf-browser-default-search-engine "startpage")
         (setq eaf-browse-blank-page-url "https://startpage.com")
         (setq eaf-browser-enable-adblocker "true")
         (setq eaf-browser-continue-where-left-off t)
         (setq eaf-browser-default-zoom "3")
         (when doom-big-font-mode)
         (setq eaf-browser-default-zoom 1.5)
         (setq eaf-mindmap-dark-mode "follow")
         (setq eaf-browser-dark-mode "force")
         (setq eaf-terminal-dark-mode "force")
         (setq eaf-pdf-dark-mode "force"))
#+end_src
